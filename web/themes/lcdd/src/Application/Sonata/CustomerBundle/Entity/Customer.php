<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\CustomerBundle\Entity;

use Sonata\CustomerBundle\Entity\BaseCustomer as BaseCustomer;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class Customer extends BaseCustomer
{

    /**
     * Available properties
     *
     * protected $title;
     * protected $firstname;
     * protected $lastname;
     * protected $email;
     * protected $birthDate;
     * protected $birthPlace;
     * protected $phoneNumber;
     * protected $mobileNumber;
     * protected $faxNumber;
     * protected $updatedAt;
     * protected $createdAt;
     * protected $user;
     * protected $addresses;
     * protected $orders;
     * protected $locale;
     * protected $isFake;
     */

    /**
     * @var int $id
     */
    protected $id;

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * {@inheritdoc}
     */
    public function setFirstname($firstname)
    {

        if(!empty($this->user) && !empty($firstname)) {
            $this->user->setFirstname($firstname);
        }

        $this->firstname = $firstname;
    }

    /**
     * {@inheritdoc}
     */
    public function getFirstname()
    {

        $firstname = '';

        if(!empty($this->user)) {
            $firstname = $this->user->getFirstname();
        }
        if(empty($firstname)) {
            $firstname = $this->firstname;
        }

        return $firstname;

    }

    /**
     * {@inheritdoc}
     */
    public function setLastname($lastname)
    {
        if(!empty($this->user) && !empty($lastname)) {
            $this->user->setLastname($lastname);
        }

        $this->lastname = $lastname;
    }

    /**
     * {@inheritdoc}
     */
    public function getLastname()
    {

        $lastname = '';

        if(!empty($this->user)) {
            $lastname = $this->user->getLastname();
        }
        if(empty($lastname)) {
            $lastname = $this->lastname;
        }

        return $lastname;

    }

    /**
     * {@inheritdoc}
     */
    public function getFullname()
    {

        $fullname = trim($this->getFirstname().' '.$this->getLastname());

        if(empty($fullname)) {
            if(!empty($this->user)) {
                $fullname = trim($this->user->getUsername());
            }
        }
        if(empty($fullname)) {
            $fullname = trim("-");
        }

        return ucfirst($fullname);

    }

    /**
     * {@inheritdoc}
     */
    public function setEmail($email)
    {
        if(!empty($this->user) && !empty($email)) {
            $this->user->setEmail($email);
        }

        $this->email = $email;
    }

    /**
     * {@inheritdoc}
     */
    public function getEmail()
    {

        $email = '';

        if(!empty($this->user)) {
            $email = $this->user->getEmail();
        }
        if(empty($email)) {
            $email = $this->email;
        }

        return $email;

    }

    /**
     * {@inheritdoc}
     */
    public function setCreatedAt(\DateTime $createdAt = null)
    {
        if(!empty($this->user) && !empty($createdAt)) {
            $this->user->setCreatedAt($createdAt);
        }

        $this->createdAt = $createdAt;
    }

    /**
     * {@inheritdoc}
     */
    public function getCreatedAt()
    {

        $createdAt = '';

        if(!empty($this->user)) {
            $createdAt = $this->user->getCreatedAt();
        }
        if(empty($createdAt)) {
            $createdAt = $this->createdAt;
        }

        return $createdAt;

    }

    /**
     * {@inheritdoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = null)
    {
        if(!empty($this->user) && !empty($updatedAt)) {
            $this->user->setUpdatedAt($updatedAt);
        }

        $this->updatedAt = $updatedAt;
    }

    /**
     * {@inheritdoc}
     */
    public function getUpdatedAt()
    {

        $updatedAt = '';

        if(!empty($this->user)) {
            $updatedAt = $this->user->getUpdatedAt();
        }
        if(empty($updatedAt)) {
            $updatedAt = $this->updatedAt;
        }

        return $updatedAt;

    }

    /**
     * {@inheritdoc}
     */
    public function setLocale($locale)
    {
        if(!empty($this->user) && !empty($locale)) {
            $this->user->setLocale($locale);
        }

        $this->locale = $locale;
    }

    /**
     * {@inheritdoc}
     */
    public function getLocale()
    {

        $locale = '';

        if(!empty($this->user)) {
            $locale = $this->user->getLocale();
        }
        if(empty($locale)) {
            $locale = $this->locale;
        }

        return $locale;

    }


}
