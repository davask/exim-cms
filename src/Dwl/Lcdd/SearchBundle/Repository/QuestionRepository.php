<?php

namespace Dwl\Lcdd\SearchBundle\Repository;

use Doctrine\ORM\EntityRepository;

use Dwl\Lcdd\SearchBundle\Entity\Question;

/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends EntityRepository
{
    public function findLikeByQuestion($question) {

        $qs = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('q')
            ->from('\Dwl\Lcdd\SearchBundle\Entity\Question', 'q')
            ->where('q.question LIKE :question')
            ->setParameter('question', $question)
            ->getQuery()
            ->getResult();

        return $qs;
    }

    public function findAllAsArray() {

        $qs = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('q', 'm', 'c', 'ct', 'lt')
            ->from('\Dwl\Lcdd\SearchBundle\Entity\Question', 'q')
            ->leftJoin('q.media', 'm')
            ->leftJoin('q.categories', 'c')
            ->leftJoin('q.civilTags', 'ct')
            ->leftJoin('q.legalTags', 'lt')
            ->getQuery()
            ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

        return $qs;
    }

    public function findSimilarByCategories($categories, $limit = 12) {

        $cats = array();
        foreach ($categories as $key => $category) {
            $cats[] = $category->getId();
        }

        $qs = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('q', 'c')
            ->from('\Dwl\Lcdd\SearchBundle\Entity\Question', 'q')
            ->leftJoin('q.categories', 'c')
            ->where('q.qualified', '1')
            ->orderBy('q.date_update', 'DESC')
        ;

        $qs->add('where', $qs->expr()->in('c', ':cats'))
            ->setParameter('cats', $cats)
            ->setMaxResults($limit)
            ->getQuery()
            ->getResult()
        ;


        return $qs;
    }

}
