<?php

namespace Dwl\Lcdd\SpeakerBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SpeakerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpeakerRepository extends EntityRepository
{

    const LCDD_ID = 31;

    public function findLcdd() {
        $lcdd = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s')
            ->from('\Dwl\Lcdd\SpeakerBundle\Entity\Speaker', 's')
            ->leftJoin('s.customer', 'c')
            ->leftJoin('c.user', 'u')
            ->where('u.id = :lcdd_id')
            ->setParameter('lcdd_id', self::LCDD_ID)
            ->getQuery()
            ->getSingleResult();

        return $lcdd;
    }


    public function findLikeByUsername($username) {

        $us = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s')
            ->from('\Dwl\Lcdd\SpeakerBundle\Entity\Speaker', 's')
            ->leftJoin('s.customer', 'c')
            ->leftJoin('c.user', 'u')
            ->where('u.username LIKE :username')
            ->setParameter('username', $username)
            ->getQuery()
            ->getResult();

        return $us;
    }

    public function findOneByUsernameCanonical($username) {

        $us = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s')
            ->from('\Dwl\Lcdd\SpeakerBundle\Entity\Speaker', 's')
            ->leftJoin('s.customer', 'c')
            ->leftJoin('c.user', 'u')
            ->where('u.username LIKE :username')
            ->setParameter('username', $username)
            ->getQuery()
            ->getSingleResult();

        return $us;
    }

    public function findAllAsArray() {

        $us = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s', 'q')
            ->from('\Dwl\Lcdd\SpeakerBundle\Entity\Speaker', 's')
            ->leftJoin('s.questions', 'q')
            ->getQuery()
            ->getArrayResult();
            // ->getResult(\Doctrine\ORM\Query::HYDRATE_ARRAY);

        return $us;
    }

    public function findAll() {

        return $this->findBy(array(), array(
            'lastname' => 'ASC',
            'firstname' => 'ASC',
            'username' => 'ASC',
        ));

    }

    public function findUsersByGroupId($id) {

        $speakers = $this->getEntityManager()
            ->createQueryBuilder()
            ->select('s')
            ->from('\Dwl\Lcdd\SpeakerBundle\Entity\Speaker', 's')
            ->leftJoin('s.customer', 'c')
            ->leftJoin('c.user', 'u')
            ->LeftJoin('u.groups', 'g')
            ->where('g.id IN (:groupIds)')
            ->setParameter('groupIds', $id)
            ->orderBy('u.lastname, u.firstname, u.username')
            ->getQuery()
            ->getResult();

        return $speakers;

    }

}
